// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id        Int       @id @default(autoincrement())
  nombre    String?
  apellido  String?
  email     String    @unique
  password  String
  typeUser  TYPE_USER @default(ADMIN) @map("tipo_usuario")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt() @map("updated_at")

  @@map("usuarios")
}

enum TYPE_USER {
  ADMIN
  MODERADOR
  CLIENTE
}

model Producto {
  id          Int      @id @default(autoincrement())
  nombre      String
  descripcion String?
  opinion     String?
  precio      Float?
  categoriaId Int      @map("categoria_id")
  marcaId     Int      @map("marca_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt() @map("updated_at")

  // Relaciones
  categoria Categoria @relation(fields: [categoriaId], references: [id])
  marca     Marca     @relation(fields: [marcaId], references: [id])
  @@map("productos")
}

model Categoria {
  id        Int      @id @default(autoincrement())
  nombre    String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt() @map("updated_at")

  // Relaciones
  productos Producto[] 

  @@map("categorias")
}

model Marca {
  id        Int      @id @default(autoincrement())
  nombre    String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt() @map("updated_at")

  // Relaciones
  productos Producto[]

  @@map("marcas")
}